1. Робота з list:
Завдання:
Реалізуйте програму для управління оцінками студентів:

Програма повинна дозволяти додавати оцінку студента в кінець списку.
Видаляти найнижчу оцінку.
Розраховувати середній бал.
Виводити список оцінок у прямому та зворотному порядку.
Додаткове завдання:
Реалізуйте сортування списку оцінок за зростанням або спаданням.

2. Робота з stack:
Завдання:
Напишіть програму, яка перетворює ціле число з десяткової системи в двійкову:

Користувач вводить число.
Число переводиться в двійкову систему, використовуючи стек.
Двійкове представлення виводиться на екран.
Додаткове завдання:
Реалізуйте перевірку, чи є двійкове число паліндромом (наприклад, 1001 – паліндром, а 1100 – ні).

3. Робота з queue:
Завдання:
Реалізуйте програму для управління чергою клієнтів в банку:

Кожен клієнт має ім'я та кількість хвилин, які потрібні для обслуговування (випадково згенерована кількість).
Програма повинна виводити імена клієнтів у порядку їх обслуговування.
Після обслуговування клієнт видаляється з черги.
Виведіть загальний час, витрачений на обслуговування всіх клієнтів.
Додаткове завдання:
Додайте пріоритетну чергу, де VIP-клієнти обслуговуються першими.

4. Робота з deque:
Завдання:
Реалізуйте програму для керування історією браузера:

Користувач вводить URL-адресу, яка додається в кінець історії.
Реалізуйте функцію "Назад" (видаляє останню адресу) та "Вперед" (додає адресу, яку було видалено).
Виведіть поточний стан історії браузера.
Додаткове завдання:
Додайте можливість очищення історії або видалення конкретного запису за індексом.

5. Комбіноване завдання:
Реалізуйте програму для симуляції роботи парковки:

Використовуйте queue для моделювання черги автомобілів, які хочуть заїхати на парковку.
Використовуйте stack для представлення паркувальних місць (останні заїхали – перші виїхали).
Якщо парковка заповнена, автомобілі чекають у черзі.
При виїзді автомобіля з парковки відобразіть, скільки інших автомобілів потрібно перемістити для цього.