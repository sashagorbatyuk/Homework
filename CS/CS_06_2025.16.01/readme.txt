Створіть інтерфейс ICalc. У ньому мають бути два
методи:
■ int Less(int valueToCompare) — повертає кількість
менших значень, ніж valueToCompare;
■ int Greater(intvalueToCompare) — повертає кількість
більших значень, ніж valueToCompare.
Клас, створений раніше у практичному завданні Array,
має імплементувати інтерфейс ICalc.
Метод Less — повертає кількість елементів масиву
менших, ніж valueToCompare.
Метод Greater — повертає кількість елементів масиву
більших, ніж valueToCompare.
Напишіть код для тестування отриманої функціональності.

Завдання 2
Створіть інтерфейс IOutput2. У ньому мають бути
два методи:
■ void ShowEven() — відображає парні значення контейнера з даними;
■ void ShowOdd() — відображає непарні значення контейнера з даними.
Клас, створений раніше у практичному завданні Array,
має імплементувати інтерфейс IOutput2.
Метод ShowEven — відображає парні значення з
масиву.
Метод ShowOdd — відображає непарні значення
масиву.
Напишіть код для тестування отриманої функціональності.

Завдання 3
Створіть інтерфейс ICalc2. У ньому мають бути два
методи:
■ int CountDistinct() — повертає кількість унікальних
значень у контейнері даних;
■ int EqualToValue(int valueToCompare) — повертає кількість значень, рівних valueToCompare.
Клас, створений раніше у практичному завданні Array,
має імплементувати інтерфейс ICalc2.
Метод CountDistinct — повертає кількість унікальних
значень в масив.
Метод EqualToValue — повертає кількість елементів
масиву, рівних valueToCompare.
Напишіть код для тестування отриманої функціональності.